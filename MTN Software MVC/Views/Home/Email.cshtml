@using MTN_Software_MVC.Models
@model LoginViewModel
@{
    ViewBag.Title = "Support";
}

<div class="page-header">
    <h1>MTN Support <small>Email</small></h1>
</div>

<div class="row">
    @if (Request.IsAuthenticated)
    {
        <div class="col-md-4">
        </div>
        <div class="col-md-4">
            
            @using (Html.BeginForm("Support", "Home", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="form-group">
                    @Html.LabelFor(m => m.Email,new { @class = "col-md-4 control-label"})
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new {  @class = "form-control" })
                    </div>
                </div>
                
                <!--<div class="input-group">
                    <span class="input-group-addon">Subject</span>
                    <input type="text" class="form-control" placeholder="Enter subject of support" />
                </div>
                <textarea class="span6" style="border-radius: 4px; border: 1px solid rgb(204, 204, 204); transition:border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out; border-image: none; width: 100%; box-shadow: inset 0px 1px 1px rgba(0,0,0,0.075); max-width: 100%;" spellcheck="true" required="" placeholder="query" rows="6"></textarea>
                <div class="btn btn-group btn-group-justified">
                    <button class="btn btn-default">Send</button>
                </div>-->
            }
        </div>
        <div class="col-md-4">
        </div>
    }
    else
    {
        <div class="jumbotron">
            <h1>Uh oh!</h1>
            <p class="lead">Sorry, you need to be signed in to do that! Why not sign up?</p>
        </div>
        <div class="container">
            @RenderPage("../Account/Register.cshtml")
            or @Html.ActionLink("login", "Login", "Account")
        </div>

    }
</div>
